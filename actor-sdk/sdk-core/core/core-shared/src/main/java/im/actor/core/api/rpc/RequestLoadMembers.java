package im.actor.core.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import java.io.IOException;

import im.actor.core.api.ApiGroupOutPeer;
import im.actor.core.network.parser.Request;
import im.actor.runtime.bser.Bser;
import im.actor.runtime.bser.BserValues;
import im.actor.runtime.bser.BserWriter;

public class RequestLoadMembers extends Request<ResponseLoadMembers> {

    public static final int HEADER = 0xae2;

    public static RequestLoadMembers fromBytes(byte[] data) throws IOException {
        return Bser.parse(new RequestLoadMembers(), data);
    }

    private ApiGroupOutPeer group;
    private int limit;
    private byte[] next;

    public RequestLoadMembers(@NotNull ApiGroupOutPeer group, int limit, @Nullable byte[] next) {
        this.group = group;
        this.limit = limit;
        this.next = next;
    }

    public RequestLoadMembers() {

    }

    @NotNull
    public ApiGroupOutPeer getGroup() {
        return this.group;
    }

    public int getLimit() {
        return this.limit;
    }

    @Nullable
    public byte[] getNext() {
        return this.next;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.group = values.getObj(1, new ApiGroupOutPeer());
        this.limit = values.getInt(2);
        this.next = values.optBytes(3);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        if (this.group == null) {
            throw new IOException();
        }
        writer.writeObject(1, this.group);
        writer.writeInt(2, this.limit);
        if (this.next != null) {
            writer.writeBytes(3, this.next);
        }
    }

    @Override
    public String toString() {
        String res = "rpc LoadMembers{";
        res += "group=" + this.group;
        res += ", limit=" + this.limit;
        res += ", next=" + this.next;
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
