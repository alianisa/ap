package im.actor.core.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import org.jetbrains.annotations.NotNull;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import im.actor.core.api.ApiUserOutPeer;
import im.actor.core.network.parser.Request;
import im.actor.runtime.bser.Bser;
import im.actor.runtime.bser.BserValues;
import im.actor.runtime.bser.BserWriter;

public class RequestLoadFullUsers extends Request<ResponseLoadFullUsers> {

    public static final int HEADER = 0xa59;

    public static RequestLoadFullUsers fromBytes(byte[] data) throws IOException {
        return Bser.parse(new RequestLoadFullUsers(), data);
    }

    private List<ApiUserOutPeer> userPeers;

    public RequestLoadFullUsers(@NotNull List<ApiUserOutPeer> userPeers) {
        this.userPeers = userPeers;
    }

    public RequestLoadFullUsers() {

    }

    @NotNull
    public List<ApiUserOutPeer> getUserPeers() {
        return this.userPeers;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        List<ApiUserOutPeer> _userPeers = new ArrayList<ApiUserOutPeer>();
        for (int i = 0; i < values.getRepeatedCount(1); i++) {
            _userPeers.add(new ApiUserOutPeer());
        }
        this.userPeers = values.getRepeatedObj(1, _userPeers);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        writer.writeRepeatedObj(1, this.userPeers);
    }

    @Override
    public String toString() {
        String res = "rpc LoadFullUsers{";
        res += "userPeers=" + this.userPeers.size();
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
