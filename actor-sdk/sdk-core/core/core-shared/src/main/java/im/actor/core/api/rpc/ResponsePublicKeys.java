package im.actor.core.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import org.jetbrains.annotations.NotNull;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import im.actor.core.api.ApiEncryptionKey;
import im.actor.core.api.ApiEncryptionKeySignature;
import im.actor.core.network.parser.Response;
import im.actor.runtime.bser.Bser;
import im.actor.runtime.bser.BserValues;
import im.actor.runtime.bser.BserWriter;

public class ResponsePublicKeys extends Response {

    public static final int HEADER = 0xa2a;

    public static ResponsePublicKeys fromBytes(byte[] data) throws IOException {
        return Bser.parse(new ResponsePublicKeys(), data);
    }

    private List<ApiEncryptionKey> publicKey;
    private List<ApiEncryptionKeySignature> signatures;

    public ResponsePublicKeys(@NotNull List<ApiEncryptionKey> publicKey, @NotNull List<ApiEncryptionKeySignature> signatures) {
        this.publicKey = publicKey;
        this.signatures = signatures;
    }

    public ResponsePublicKeys() {

    }

    @NotNull
    public List<ApiEncryptionKey> getPublicKey() {
        return this.publicKey;
    }

    @NotNull
    public List<ApiEncryptionKeySignature> getSignatures() {
        return this.signatures;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        List<ApiEncryptionKey> _publicKey = new ArrayList<ApiEncryptionKey>();
        for (int i = 0; i < values.getRepeatedCount(1); i++) {
            _publicKey.add(new ApiEncryptionKey());
        }
        this.publicKey = values.getRepeatedObj(1, _publicKey);
        List<ApiEncryptionKeySignature> _signatures = new ArrayList<ApiEncryptionKeySignature>();
        for (int i = 0; i < values.getRepeatedCount(2); i++) {
            _signatures.add(new ApiEncryptionKeySignature());
        }
        this.signatures = values.getRepeatedObj(2, _signatures);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        writer.writeRepeatedObj(1, this.publicKey);
        writer.writeRepeatedObj(2, this.signatures);
    }

    @Override
    public String toString() {
        String res = "response PublicKeys{";
        res += "publicKey=" + this.publicKey;
        res += ", signatures=" + this.signatures;
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
