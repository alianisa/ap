package im.actor.core.api.updates;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import org.jetbrains.annotations.NotNull;
import org.jetbrains.annotations.Nullable;

import java.io.IOException;

import im.actor.core.network.parser.Update;
import im.actor.runtime.bser.Bser;
import im.actor.runtime.bser.BserValues;
import im.actor.runtime.bser.BserWriter;

import static im.actor.runtime.bser.Utils.byteArrayToString;

public class UpdateRawUpdate extends Update {

    public static final int HEADER = 0x50;

    public static UpdateRawUpdate fromBytes(byte[] data) throws IOException {
        return Bser.parse(new UpdateRawUpdate(), data);
    }

    private String type;
    private byte[] bytes;

    public UpdateRawUpdate(@Nullable String type, @NotNull byte[] bytes) {
        this.type = type;
        this.bytes = bytes;
    }

    public UpdateRawUpdate() {

    }

    @Nullable
    public String getType() {
        return this.type;
    }

    @NotNull
    public byte[] getBytes() {
        return this.bytes;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.type = values.optString(1);
        this.bytes = values.getBytes(2);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        if (this.type != null) {
            writer.writeString(1, this.type);
        }
        if (this.bytes == null) {
            throw new IOException();
        }
        writer.writeBytes(2, this.bytes);
    }

    @Override
    public String toString() {
        String res = "update RawUpdate{";
        res += "type=" + this.type;
        res += ", bytes=" + byteArrayToString(this.bytes);
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
