package im.actor.core.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import org.jetbrains.annotations.NotNull;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import im.actor.core.api.ApiGroup;
import im.actor.core.api.ApiUser;
import im.actor.core.network.parser.Response;
import im.actor.runtime.bser.Bser;
import im.actor.runtime.bser.BserValues;
import im.actor.runtime.bser.BserWriter;

public class ResponseEnterGroupObsolete extends Response {

    public static final int HEADER = 0xc8;

    public static ResponseEnterGroupObsolete fromBytes(byte[] data) throws IOException {
        return Bser.parse(new ResponseEnterGroupObsolete(), data);
    }

    private ApiGroup group;
    private List<ApiUser> users;
    private long rid;
    private int seq;
    private byte[] state;
    private long date;

    public ResponseEnterGroupObsolete(@NotNull ApiGroup group, @NotNull List<ApiUser> users, long rid, int seq, @NotNull byte[] state, long date) {
        this.group = group;
        this.users = users;
        this.rid = rid;
        this.seq = seq;
        this.state = state;
        this.date = date;
    }

    public ResponseEnterGroupObsolete() {

    }

    @NotNull
    public ApiGroup getGroup() {
        return this.group;
    }

    @NotNull
    public List<ApiUser> getUsers() {
        return this.users;
    }

    public long getRid() {
        return this.rid;
    }

    public int getSeq() {
        return this.seq;
    }

    @NotNull
    public byte[] getState() {
        return this.state;
    }

    public long getDate() {
        return this.date;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.group = values.getObj(1, new ApiGroup());
        List<ApiUser> _users = new ArrayList<ApiUser>();
        for (int i = 0; i < values.getRepeatedCount(2); i++) {
            _users.add(new ApiUser());
        }
        this.users = values.getRepeatedObj(2, _users);
        this.rid = values.getLong(3);
        this.seq = values.getInt(4);
        this.state = values.getBytes(5);
        this.date = values.getLong(6);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        if (this.group == null) {
            throw new IOException();
        }
        writer.writeObject(1, this.group);
        writer.writeRepeatedObj(2, this.users);
        writer.writeLong(3, this.rid);
        writer.writeInt(4, this.seq);
        if (this.state == null) {
            throw new IOException();
        }
        writer.writeBytes(5, this.state);
        writer.writeLong(6, this.date);
    }

    @Override
    public String toString() {
        String res = "tuple EnterGroupObsolete{";
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
