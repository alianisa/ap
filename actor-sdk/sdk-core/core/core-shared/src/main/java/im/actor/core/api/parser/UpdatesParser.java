package im.actor.core.api.parser;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import java.io.IOException;

import im.actor.core.api.updates.UpdateCallHandled;
import im.actor.core.api.updates.UpdateCallUpgraded;
import im.actor.core.api.updates.UpdateChatArchive;
import im.actor.core.api.updates.UpdateChatClear;
import im.actor.core.api.updates.UpdateChatDelete;
import im.actor.core.api.updates.UpdateChatDropCache;
import im.actor.core.api.updates.UpdateChatGroupsChanged;
import im.actor.core.api.updates.UpdateConfig;
import im.actor.core.api.updates.UpdateContactRegistered;
import im.actor.core.api.updates.UpdateContactsAdded;
import im.actor.core.api.updates.UpdateContactsRemoved;
import im.actor.core.api.updates.UpdateCountersChanged;
import im.actor.core.api.updates.UpdateEmptyUpdate;
import im.actor.core.api.updates.UpdateEncryptedPackage;
import im.actor.core.api.updates.UpdateEventBusDeviceConnected;
import im.actor.core.api.updates.UpdateEventBusDeviceDisconnected;
import im.actor.core.api.updates.UpdateEventBusDisposed;
import im.actor.core.api.updates.UpdateEventBusMessage;
import im.actor.core.api.updates.UpdateGroupAboutChanged;
import im.actor.core.api.updates.UpdateGroupAboutChangedObsolete;
import im.actor.core.api.updates.UpdateGroupAvatarChanged;
import im.actor.core.api.updates.UpdateGroupAvatarChangedObsolete;
import im.actor.core.api.updates.UpdateGroupDeleted;
import im.actor.core.api.updates.UpdateGroupExtChanged;
import im.actor.core.api.updates.UpdateGroupFullExtChanged;
import im.actor.core.api.updates.UpdateGroupFullPermissionsChanged;
import im.actor.core.api.updates.UpdateGroupHistoryShared;
import im.actor.core.api.updates.UpdateGroupInviteObsolete;
import im.actor.core.api.updates.UpdateGroupMemberAdminChanged;
import im.actor.core.api.updates.UpdateGroupMemberChanged;
import im.actor.core.api.updates.UpdateGroupMemberDiff;
import im.actor.core.api.updates.UpdateGroupMembersBecameAsync;
import im.actor.core.api.updates.UpdateGroupMembersCountChanged;
import im.actor.core.api.updates.UpdateGroupMembersUpdateObsolete;
import im.actor.core.api.updates.UpdateGroupMembersUpdated;
import im.actor.core.api.updates.UpdateGroupOnline;
import im.actor.core.api.updates.UpdateGroupOwnerChanged;
import im.actor.core.api.updates.UpdateGroupPermissionsChanged;
import im.actor.core.api.updates.UpdateGroupPreCreated;
import im.actor.core.api.updates.UpdateGroupPreOrderChanged;
import im.actor.core.api.updates.UpdateGroupPreParentChanged;
import im.actor.core.api.updates.UpdateGroupPreRemoved;
import im.actor.core.api.updates.UpdateGroupShortNameChanged;
import im.actor.core.api.updates.UpdateGroupTitleChanged;
import im.actor.core.api.updates.UpdateGroupTitleChangedObsolete;
import im.actor.core.api.updates.UpdateGroupTopicChanged;
import im.actor.core.api.updates.UpdateGroupTopicChangedObsolete;
import im.actor.core.api.updates.UpdateGroupUserInvitedObsolete;
import im.actor.core.api.updates.UpdateGroupUserKickObsolete;
import im.actor.core.api.updates.UpdateGroupUserLeaveObsolete;
import im.actor.core.api.updates.UpdateIncomingCall;
import im.actor.core.api.updates.UpdateKeysAdded;
import im.actor.core.api.updates.UpdateKeysRemoved;
import im.actor.core.api.updates.UpdateMessage;
import im.actor.core.api.updates.UpdateMessageContentChanged;
import im.actor.core.api.updates.UpdateMessageDateChanged;
import im.actor.core.api.updates.UpdateMessageDelete;
import im.actor.core.api.updates.UpdateMessageQuotedChanged;
import im.actor.core.api.updates.UpdateMessageRead;
import im.actor.core.api.updates.UpdateMessageReadByMe;
import im.actor.core.api.updates.UpdateMessageReceived;
import im.actor.core.api.updates.UpdateMessageSent;
import im.actor.core.api.updates.UpdateOwnStickersChanged;
import im.actor.core.api.updates.UpdateOwnTeamsChanged;
import im.actor.core.api.updates.UpdateParameterChanged;
import im.actor.core.api.updates.UpdatePauseNotifications;
import im.actor.core.api.updates.UpdatePublicKeyGroupAdded;
import im.actor.core.api.updates.UpdatePublicKeyGroupChanged;
import im.actor.core.api.updates.UpdatePublicKeyGroupRemoved;
import im.actor.core.api.updates.UpdateRawUpdate;
import im.actor.core.api.updates.UpdateReactionsUpdate;
import im.actor.core.api.updates.UpdateResetGroupPre;
import im.actor.core.api.updates.UpdateRestoreNotifications;
import im.actor.core.api.updates.UpdateStickerCollectionsChanged;
import im.actor.core.api.updates.UpdateSyncedSetAddedOrUpdated;
import im.actor.core.api.updates.UpdateSyncedSetRemoved;
import im.actor.core.api.updates.UpdateSynedSetUpdated;
import im.actor.core.api.updates.UpdateTyping;
import im.actor.core.api.updates.UpdateTypingStop;
import im.actor.core.api.updates.UpdateUserAboutChanged;
import im.actor.core.api.updates.UpdateUserAvatarChanged;
import im.actor.core.api.updates.UpdateUserBlocked;
import im.actor.core.api.updates.UpdateUserBotCommandsChanged;
import im.actor.core.api.updates.UpdateUserContactsChanged;
import im.actor.core.api.updates.UpdateUserExtChanged;
import im.actor.core.api.updates.UpdateUserFullExtChanged;
import im.actor.core.api.updates.UpdateUserLastSeen;
import im.actor.core.api.updates.UpdateUserLocalNameChanged;
import im.actor.core.api.updates.UpdateUserNameChanged;
import im.actor.core.api.updates.UpdateUserNickChanged;
import im.actor.core.api.updates.UpdateUserOffline;
import im.actor.core.api.updates.UpdateUserOnline;
import im.actor.core.api.updates.UpdateUserPreferredLanguagesChanged;
import im.actor.core.api.updates.UpdateUserTimeZoneChanged;
import im.actor.core.api.updates.UpdateUserUnblocked;
import im.actor.core.network.parser.BaseParser;
import im.actor.core.network.parser.Update;

public class UpdatesParser extends BaseParser<Update> {
    @Override
    public Update read(int type, byte[] payload) throws IOException {
        switch (type) {
            case 16:
                return UpdateUserAvatarChanged.fromBytes(payload);
            case 32:
                return UpdateUserNameChanged.fromBytes(payload);
            case 51:
                return UpdateUserLocalNameChanged.fromBytes(payload);
            case 134:
                return UpdateUserContactsChanged.fromBytes(payload);
            case 209:
                return UpdateUserNickChanged.fromBytes(payload);
            case 210:
                return UpdateUserAboutChanged.fromBytes(payload);
            case 212:
                return UpdateUserPreferredLanguagesChanged.fromBytes(payload);
            case 216:
                return UpdateUserTimeZoneChanged.fromBytes(payload);
            case 217:
                return UpdateUserBotCommandsChanged.fromBytes(payload);
            case 218:
                return UpdateUserExtChanged.fromBytes(payload);
            case 219:
                return UpdateUserFullExtChanged.fromBytes(payload);
            case 5:
                return UpdateContactRegistered.fromBytes(payload);
            case 40:
                return UpdateContactsAdded.fromBytes(payload);
            case 41:
                return UpdateContactsRemoved.fromBytes(payload);
            case 2629:
                return UpdateUserBlocked.fromBytes(payload);
            case 2630:
                return UpdateUserUnblocked.fromBytes(payload);
            case 55:
                return UpdateMessage.fromBytes(payload);
            case 162:
                return UpdateMessageContentChanged.fromBytes(payload);
            case 169:
                return UpdateMessageQuotedChanged.fromBytes(payload);
            case 163:
                return UpdateMessageDateChanged.fromBytes(payload);
            case 4:
                return UpdateMessageSent.fromBytes(payload);
            case 54:
                return UpdateMessageReceived.fromBytes(payload);
            case 19:
                return UpdateMessageRead.fromBytes(payload);
            case 50:
                return UpdateMessageReadByMe.fromBytes(payload);
            case 46:
                return UpdateMessageDelete.fromBytes(payload);
            case 47:
                return UpdateChatClear.fromBytes(payload);
            case 48:
                return UpdateChatDelete.fromBytes(payload);
            case 94:
                return UpdateChatArchive.fromBytes(payload);
            case 2690:
                return UpdateChatDropCache.fromBytes(payload);
            case 1:
                return UpdateChatGroupsChanged.fromBytes(payload);
            case 222:
                return UpdateReactionsUpdate.fromBytes(payload);
            case 2609:
                return UpdateGroupTitleChanged.fromBytes(payload);
            case 2610:
                return UpdateGroupAvatarChanged.fromBytes(payload);
            case 2616:
                return UpdateGroupTopicChanged.fromBytes(payload);
            case 2617:
                return UpdateGroupAboutChanged.fromBytes(payload);
            case 2613:
                return UpdateGroupExtChanged.fromBytes(payload);
            case 2618:
                return UpdateGroupFullExtChanged.fromBytes(payload);
            case 2628:
                return UpdateGroupShortNameChanged.fromBytes(payload);
            case 2619:
                return UpdateGroupOwnerChanged.fromBytes(payload);
            case 2620:
                return UpdateGroupHistoryShared.fromBytes(payload);
            case 2658:
                return UpdateGroupDeleted.fromBytes(payload);
            case 2663:
                return UpdateGroupPermissionsChanged.fromBytes(payload);
            case 2664:
                return UpdateGroupFullPermissionsChanged.fromBytes(payload);
            case 2612:
                return UpdateGroupMemberChanged.fromBytes(payload);
            case 2615:
                return UpdateGroupMembersBecameAsync.fromBytes(payload);
            case 2614:
                return UpdateGroupMembersUpdated.fromBytes(payload);
            case 2623:
                return UpdateGroupMemberDiff.fromBytes(payload);
            case 2622:
                return UpdateGroupMembersCountChanged.fromBytes(payload);
            case 2627:
                return UpdateGroupMemberAdminChanged.fromBytes(payload);
            case 36:
                return UpdateGroupInviteObsolete.fromBytes(payload);
            case 21:
                return UpdateGroupUserInvitedObsolete.fromBytes(payload);
            case 23:
                return UpdateGroupUserLeaveObsolete.fromBytes(payload);
            case 24:
                return UpdateGroupUserKickObsolete.fromBytes(payload);
            case 44:
                return UpdateGroupMembersUpdateObsolete.fromBytes(payload);
            case 38:
                return UpdateGroupTitleChangedObsolete.fromBytes(payload);
            case 213:
                return UpdateGroupTopicChangedObsolete.fromBytes(payload);
            case 214:
                return UpdateGroupAboutChangedObsolete.fromBytes(payload);
            case 39:
                return UpdateGroupAvatarChangedObsolete.fromBytes(payload);
            case 161:
                return UpdateOwnStickersChanged.fromBytes(payload);
            case 164:
                return UpdateStickerCollectionsChanged.fromBytes(payload);
            case 165:
                return UpdateOwnTeamsChanged.fromBytes(payload);
            case 166:
                return UpdatePauseNotifications.fromBytes(payload);
            case 167:
                return UpdateRestoreNotifications.fromBytes(payload);
            case 6:
                return UpdateTyping.fromBytes(payload);
            case 81:
                return UpdateTypingStop.fromBytes(payload);
            case 7:
                return UpdateUserOnline.fromBytes(payload);
            case 8:
                return UpdateUserOffline.fromBytes(payload);
            case 9:
                return UpdateUserLastSeen.fromBytes(payload);
            case 33:
                return UpdateGroupOnline.fromBytes(payload);
            case 2561:
                return UpdateEventBusDeviceConnected.fromBytes(payload);
            case 2563:
                return UpdateEventBusDeviceDisconnected.fromBytes(payload);
            case 2562:
                return UpdateEventBusMessage.fromBytes(payload);
            case 2564:
                return UpdateEventBusDisposed.fromBytes(payload);
            case 72:
                return UpdateSynedSetUpdated.fromBytes(payload);
            case 73:
                return UpdateSyncedSetAddedOrUpdated.fromBytes(payload);
            case 74:
                return UpdateSyncedSetRemoved.fromBytes(payload);
            case 52:
                return UpdateIncomingCall.fromBytes(payload);
            case 53:
                return UpdateCallHandled.fromBytes(payload);
            case 56:
                return UpdateCallUpgraded.fromBytes(payload);
            case 131:
                return UpdateParameterChanged.fromBytes(payload);
            case 103:
                return UpdatePublicKeyGroupChanged.fromBytes(payload);
            case 112:
                return UpdateKeysAdded.fromBytes(payload);
            case 113:
                return UpdateKeysRemoved.fromBytes(payload);
            case 104:
                return UpdatePublicKeyGroupAdded.fromBytes(payload);
            case 105:
                return UpdatePublicKeyGroupRemoved.fromBytes(payload);
            case 177:
                return UpdateEncryptedPackage.fromBytes(payload);
            case 80:
                return UpdateRawUpdate.fromBytes(payload);
            case 85:
                return UpdateEmptyUpdate.fromBytes(payload);
            case 215:
                return UpdateCountersChanged.fromBytes(payload);
            case 42:
                return UpdateConfig.fromBytes(payload);
            case 20:
                return UpdateGroupPreCreated.fromBytes(payload);
            case 22:
                return UpdateGroupPreRemoved.fromBytes(payload);
            case 88:
                return UpdateGroupPreParentChanged.fromBytes(payload);
            case 89:
                return UpdateGroupPreOrderChanged.fromBytes(payload);
            case 96:
                return UpdateResetGroupPre.fromBytes(payload);
        }
        throw new IOException();
    }
}
