package im.actor.core.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import org.jetbrains.annotations.NotNull;

import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import im.actor.core.api.ApiWallpapper;
import im.actor.core.network.parser.Response;
import im.actor.runtime.bser.Bser;
import im.actor.runtime.bser.BserValues;
import im.actor.runtime.bser.BserWriter;

public class ResponseLoadWallpappers extends Response {

    public static final int HEADER = 0xf2;

    public static ResponseLoadWallpappers fromBytes(byte[] data) throws IOException {
        return Bser.parse(new ResponseLoadWallpappers(), data);
    }

    private List<ApiWallpapper> wallpappers;

    public ResponseLoadWallpappers(@NotNull List<ApiWallpapper> wallpappers) {
        this.wallpappers = wallpappers;
    }

    public ResponseLoadWallpappers() {

    }

    @NotNull
    public List<ApiWallpapper> getWallpappers() {
        return this.wallpappers;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        List<ApiWallpapper> _wallpappers = new ArrayList<ApiWallpapper>();
        for (int i = 0; i < values.getRepeatedCount(1); i++) {
            _wallpappers.add(new ApiWallpapper());
        }
        this.wallpappers = values.getRepeatedObj(1, _wallpappers);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        writer.writeRepeatedObj(1, this.wallpappers);
    }

    @Override
    public String toString() {
        String res = "tuple LoadWallpappers{";
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
