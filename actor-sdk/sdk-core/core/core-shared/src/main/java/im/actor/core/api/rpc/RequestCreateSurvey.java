package im.actor.core.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import im.actor.runtime.bser.*;
import im.actor.runtime.collections.*;
import static im.actor.runtime.bser.Utils.*;
import im.actor.core.network.parser.*;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.annotations.NotNull;
import com.google.j2objc.annotations.ObjectiveCName;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;
import im.actor.core.api.*;

public class RequestCreateSurvey extends Request<ResponseCreateSurvey> {

    public static final int HEADER = 0x501;
    public static RequestCreateSurvey fromBytes(byte[] data) throws IOException {
        return Bser.parse(new RequestCreateSurvey(), data);
    }

    private int randomId;
    private String surveyName;
    private List<String> answers;

    public RequestCreateSurvey(int randomId, @NotNull String surveyName, @NotNull List<String> answers) {
        this.randomId = randomId;
        this.surveyName = surveyName;
        this.answers = answers;
    }

    public RequestCreateSurvey() {

    }

    public int getRandomId() {
        return this.randomId;
    }

    @NotNull
    public String getSurveyName() {
        return this.surveyName;
    }

    @NotNull
    public List<String> getAnswers() {
        return this.answers;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.randomId = values.getInt(1);
        this.surveyName = values.getString(2);
        this.answers = values.getRepeatedString(3);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        writer.writeInt(1, this.randomId);
        if (this.surveyName == null) {
            throw new IOException();
        }
        writer.writeString(2, this.surveyName);
        writer.writeRepeatedString(3, this.answers);
    }

    @Override
    public String toString() {
        String res = "rpc CreateSurvey{";
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
