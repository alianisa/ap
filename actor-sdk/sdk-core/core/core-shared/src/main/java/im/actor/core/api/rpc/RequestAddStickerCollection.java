package im.actor.core.api.rpc;
/*
 *  Generated by the Actor API Scheme generator.  DO NOT EDIT!
 */

import java.io.IOException;

import im.actor.core.network.parser.Request;
import im.actor.runtime.bser.Bser;
import im.actor.runtime.bser.BserValues;
import im.actor.runtime.bser.BserWriter;

public class RequestAddStickerCollection extends Request<ResponseStickersReponse> {

    public static final int HEADER = 0xf4;

    public static RequestAddStickerCollection fromBytes(byte[] data) throws IOException {
        return Bser.parse(new RequestAddStickerCollection(), data);
    }

    private int id;
    private long accessHash;

    public RequestAddStickerCollection(int id, long accessHash) {
        this.id = id;
        this.accessHash = accessHash;
    }

    public RequestAddStickerCollection() {

    }

    public int getId() {
        return this.id;
    }

    public long getAccessHash() {
        return this.accessHash;
    }

    @Override
    public void parse(BserValues values) throws IOException {
        this.id = values.getInt(1);
        this.accessHash = values.getLong(2);
    }

    @Override
    public void serialize(BserWriter writer) throws IOException {
        writer.writeInt(1, this.id);
        writer.writeLong(2, this.accessHash);
    }

    @Override
    public String toString() {
        String res = "rpc AddStickerCollection{";
        res += "id=" + this.id;
        res += ", accessHash=" + this.accessHash;
        res += "}";
        return res;
    }

    @Override
    public int getHeaderKey() {
        return HEADER;
    }
}
